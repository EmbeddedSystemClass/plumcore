/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6-dev at Fri May 19 19:11:33 2017. */

#ifndef PB_AKE_3DH_PB_H_INCLUDED
#define PB_AKE_3DH_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _EphemeralPublicKeyRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:EphemeralPublicKeyRequest) */
} EphemeralPublicKeyRequest;

typedef struct _IdentityPublicKeyRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:IdentityPublicKeyRequest) */
} IdentityPublicKeyRequest;

typedef PB_BYTES_ARRAY_T(32) EphemeralPublicKeyResponse_ephemeral_pk_t;
typedef struct _EphemeralPublicKeyResponse {
    EphemeralPublicKeyResponse_ephemeral_pk_t ephemeral_pk;
/* @@protoc_insertion_point(struct:EphemeralPublicKeyResponse) */
} EphemeralPublicKeyResponse;

typedef PB_BYTES_ARRAY_T(32) IdentityPublicKeyResponse_identity_pk_t;
typedef PB_BYTES_ARRAY_T(32) IdentityPublicKeyResponse_encrypted_identity_pk_t;
typedef struct _IdentityPublicKeyResponse {
    bool has_identity_pk;
    IdentityPublicKeyResponse_identity_pk_t identity_pk;
    bool has_encrypted_identity_pk;
    IdentityPublicKeyResponse_encrypted_identity_pk_t encrypted_identity_pk;
/* @@protoc_insertion_point(struct:IdentityPublicKeyResponse) */
} IdentityPublicKeyResponse;

typedef PB_BYTES_ARRAY_T(32) KeyConfirmationRequest_challenge_t;
typedef struct _KeyConfirmationRequest {
    KeyConfirmationRequest_challenge_t challenge;
/* @@protoc_insertion_point(struct:KeyConfirmationRequest) */
} KeyConfirmationRequest;

typedef PB_BYTES_ARRAY_T(32) KeyConfirmationResponse_response_t;
typedef struct _KeyConfirmationResponse {
    KeyConfirmationResponse_response_t response;
/* @@protoc_insertion_point(struct:KeyConfirmationResponse) */
} KeyConfirmationResponse;

typedef PB_BYTES_ARRAY_T(4) Ake3dhMessage_session_id_t;
typedef struct _Ake3dhMessage {
    Ake3dhMessage_session_id_t session_id;
    pb_size_t which_content;
    union {
        EphemeralPublicKeyRequest epk_request;
        EphemeralPublicKeyResponse epk_response;
        IdentityPublicKeyRequest ipk_request;
        IdentityPublicKeyResponse ipk_response;
        KeyConfirmationRequest kc_request;
        KeyConfirmationResponse kc_response;
    } content;
/* @@protoc_insertion_point(struct:Ake3dhMessage) */
} Ake3dhMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Ake3dhMessage_init_default               {{0, {0}}, 0, {EphemeralPublicKeyRequest_init_default}}
#define EphemeralPublicKeyRequest_init_default   {0}
#define EphemeralPublicKeyResponse_init_default  {{0, {0}}}
#define IdentityPublicKeyRequest_init_default    {0}
#define IdentityPublicKeyResponse_init_default   {false, {0, {0}}, false, {0, {0}}}
#define KeyConfirmationRequest_init_default      {{0, {0}}}
#define KeyConfirmationResponse_init_default     {{0, {0}}}
#define Ake3dhMessage_init_zero                  {{0, {0}}, 0, {EphemeralPublicKeyRequest_init_zero}}
#define EphemeralPublicKeyRequest_init_zero      {0}
#define EphemeralPublicKeyResponse_init_zero     {{0, {0}}}
#define IdentityPublicKeyRequest_init_zero       {0}
#define IdentityPublicKeyResponse_init_zero      {false, {0, {0}}, false, {0, {0}}}
#define KeyConfirmationRequest_init_zero         {{0, {0}}}
#define KeyConfirmationResponse_init_zero        {{0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define EphemeralPublicKeyResponse_ephemeral_pk_tag 2
#define IdentityPublicKeyResponse_identity_pk_tag 2
#define IdentityPublicKeyResponse_encrypted_identity_pk_tag 3
#define KeyConfirmationRequest_challenge_tag     2
#define KeyConfirmationResponse_response_tag     2
#define Ake3dhMessage_epk_request_tag            2
#define Ake3dhMessage_epk_response_tag           3
#define Ake3dhMessage_ipk_request_tag            4
#define Ake3dhMessage_ipk_response_tag           5
#define Ake3dhMessage_kc_request_tag             6
#define Ake3dhMessage_kc_response_tag            7
#define Ake3dhMessage_session_id_tag             1

/* Struct field encoding specification for nanopb */
extern const pb_field_t Ake3dhMessage_fields[8];
extern const pb_field_t EphemeralPublicKeyRequest_fields[1];
extern const pb_field_t EphemeralPublicKeyResponse_fields[2];
extern const pb_field_t IdentityPublicKeyRequest_fields[1];
extern const pb_field_t IdentityPublicKeyResponse_fields[3];
extern const pb_field_t KeyConfirmationRequest_fields[2];
extern const pb_field_t KeyConfirmationResponse_fields[2];

/* Maximum encoded size of messages (where known) */
#define Ake3dhMessage_size                       76
#define EphemeralPublicKeyRequest_size           0
#define EphemeralPublicKeyResponse_size          34
#define IdentityPublicKeyRequest_size            0
#define IdentityPublicKeyResponse_size           68
#define KeyConfirmationRequest_size              34
#define KeyConfirmationResponse_size             34

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define AKE_3DH_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
