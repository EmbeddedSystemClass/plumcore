/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6-dev at Fri May 19 19:11:33 2017. */

#ifndef PB_UMESH_L2_KEYMGR_PB_H_INCLUDED
#define PB_UMESH_L2_KEYMGR_PB_H_INCLUDED
#include <pb.h>

#include "ake_3dh.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _L2KeyManagerMessage {
    pb_size_t which_content;
    union {
        Ake3dhMessage ake_3dh;
    } content;
/* @@protoc_insertion_point(struct:L2KeyManagerMessage) */
} L2KeyManagerMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define L2KeyManagerMessage_init_default         {0, {Ake3dhMessage_init_default}}
#define L2KeyManagerMessage_init_zero            {0, {Ake3dhMessage_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define L2KeyManagerMessage_ake_3dh_tag          1

/* Struct field encoding specification for nanopb */
extern const pb_field_t L2KeyManagerMessage_fields[2];

/* Maximum encoded size of messages (where known) */
#define L2KeyManagerMessage_size                 78

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define UMESH_L2_KEYMGR_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
