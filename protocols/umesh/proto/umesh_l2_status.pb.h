/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6-dev at Fri May 19 19:11:33 2017. */

#ifndef PB_UMESH_L2_STATUS_PB_H_INCLUDED
#define PB_UMESH_L2_STATUS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(16) PowerMessage_id_t;
typedef struct _PowerMessage {
    PowerMessage_id_t id;
    uint32_t voltage;
    bool has_current;
    int32_t current;
/* @@protoc_insertion_point(struct:PowerMessage) */
} PowerMessage;

typedef PB_BYTES_ARRAY_T(16) SensorMessage_id_t;
typedef PB_BYTES_ARRAY_T(16) SensorMessage_quantity_name_t;
typedef PB_BYTES_ARRAY_T(8) SensorMessage_quantity_symbol_t;
typedef PB_BYTES_ARRAY_T(16) SensorMessage_unit_name_t;
typedef PB_BYTES_ARRAY_T(8) SensorMessage_unit_symbol_t;
typedef struct _SensorMessage {
    SensorMessage_id_t id;
    bool has_quantity_name;
    SensorMessage_quantity_name_t quantity_name;
    bool has_quantity_symbol;
    SensorMessage_quantity_symbol_t quantity_symbol;
    bool has_unit_name;
    SensorMessage_unit_name_t unit_name;
    SensorMessage_unit_symbol_t unit_symbol;
    float value;
/* @@protoc_insertion_point(struct:SensorMessage) */
} SensorMessage;

typedef struct _StatusProtoMessage {
    pb_size_t which_content;
    union {
        SensorMessage sensor_message;
        PowerMessage power_message;
    } content;
/* @@protoc_insertion_point(struct:StatusProtoMessage) */
} StatusProtoMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define StatusProtoMessage_init_default          {0, {SensorMessage_init_default}}
#define SensorMessage_init_default               {{0, {0}}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}, {0, {0}}, 0}
#define PowerMessage_init_default                {{0, {0}}, 0, false, 0}
#define StatusProtoMessage_init_zero             {0, {SensorMessage_init_zero}}
#define SensorMessage_init_zero                  {{0, {0}}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}, {0, {0}}, 0}
#define PowerMessage_init_zero                   {{0, {0}}, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define PowerMessage_id_tag                      1
#define PowerMessage_voltage_tag                 2
#define PowerMessage_current_tag                 3
#define SensorMessage_id_tag                     1
#define SensorMessage_quantity_name_tag          2
#define SensorMessage_quantity_symbol_tag        3
#define SensorMessage_unit_name_tag              4
#define SensorMessage_unit_symbol_tag            5
#define SensorMessage_value_tag                  6
#define StatusProtoMessage_sensor_message_tag    1
#define StatusProtoMessage_power_message_tag     2

/* Struct field encoding specification for nanopb */
extern const pb_field_t StatusProtoMessage_fields[3];
extern const pb_field_t SensorMessage_fields[7];
extern const pb_field_t PowerMessage_fields[4];

/* Maximum encoded size of messages (where known) */
#define StatusProtoMessage_size                  81
#define SensorMessage_size                       79
#define PowerMessage_size                        35

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define UMESH_L2_STATUS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
